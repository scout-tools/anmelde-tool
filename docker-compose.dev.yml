version: '3.9'

services:
  web:
    container_name: backend
    restart: unless-stopped
    build: ./backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend/:/usr/src/app/
      - .:/backend/
      - .:/db.sqlite3
    ports:
      - "8000:8000"
    env_file:
      - ./backend/backend/.env
    depends_on:
      - redis

  #  nginx-proxy:
  #    container_name: nginx-proxy
  #    image: jwilder/nginx-proxy:latest
  #    restart: always
  #    ports:
  #      - "443:443"
  #      - "80:80"
  #    volumes:
  #      - certs:/etc/nginx/certs
  #      - html:/usr/share/nginx/html
  #      - vhost:/etc/nginx/vhost.d
  #      - /var/run/docker.sock:/tmp/docker.sock:ro
  #    depends_on:
  #      - web

  celery:
    build: ./backend
    command: celery -A backend worker -l info
    volumes:
      - ./backend/:/usr/src/app
    env_file:
      - ./backend/backend/.env
    depends_on:
      - web
      - redis

  celery-beat:
    build: ./backend
    command: celery -A backend beat -l info
    volumes:
      - ./backend/:/usr/src/app/
    env_file:
      - ./backend/backend/.env
    depends_on:
      - redis

  flower:
    build: ./backend
    command: celery -A backend flower
    ports:
      - "5555:5555"
    volumes:
      - ./backend/:/usr/src/app/
    env_file:
      - ./backend/backend/.env
    depends_on:
      - redis
      - celery
      - celery-beat

  redis:
    image: redis:latest

volumes:
  certs:
  html:
  vhost:
  acme:
